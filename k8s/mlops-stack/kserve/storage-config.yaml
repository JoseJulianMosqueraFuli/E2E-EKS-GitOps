apiVersion: v1
kind: Secret
metadata:
  name: storage-config
  namespace: kserve-system
  labels:
    app.kubernetes.io/name: kserve
    app.kubernetes.io/component: storage-config
type: Opaque
stringData:
  # S3 configuration for model artifacts
  s3: |
    {
      "type": "s3",
      "access_key_id": "",
      "secret_access_key": "",
      "endpoint_url": "https://s3.us-west-2.amazonaws.com",
      "region": "us-west-2",
      "bucket": "mlops-model-artifacts",
      "use_ssl": true,
      "verify_ssl": true,
      "use_virtual_bucket": false,
      "use_anonymous_credential": false
    }
  # Local storage configuration (for development)
  localfs: |
    {
      "type": "localfs",
      "root_path": "/mnt/models"
    }
---
# Service account for model serving with S3 access
apiVersion: v1
kind: ServiceAccount
metadata:
  name: models-sa
  namespace: models
  labels:
    app.kubernetes.io/name: kserve
    app.kubernetes.io/component: service-account
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/kserve-models-s3-role
---
# RBAC for models service account
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: models
  name: models-role
  labels:
    app.kubernetes.io/name: kserve
    app.kubernetes.io/component: rbac
rules:
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: models-rolebinding
  namespace: models
  labels:
    app.kubernetes.io/name: kserve
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: models-sa
  namespace: models
roleRef:
  kind: Role
  name: models-role
  apiGroup: rbac.authorization.k8s.io