apiVersion: apps/v1
kind: Deployment
metadata:
  name: kserve-controller-manager
  namespace: kserve-system
  labels:
    app.kubernetes.io/name: kserve
    app.kubernetes.io/component: controller-manager
    control-plane: kserve-controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: kserve-controller-manager
  template:
    metadata:
      labels:
        control-plane: kserve-controller-manager
        app.kubernetes.io/name: kserve
        app.kubernetes.io/component: controller-manager
    spec:
      serviceAccountName: kserve-controller-manager
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: manager
        image: kserve/kserve-controller:v0.11.0
        command:
        - /manager
        args:
        - --leader-elect
        - --metrics-bind-addr=:8080
        - --health-probe-bind-addr=:8081
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SECRET_NAME
          value: webhook-server-certs
        ports:
        - name: webhook-server
          containerPort: 9443
          protocol: TCP
        - name: metrics
          containerPort: 8080
          protocol: TCP
        - name: health
          containerPort: 8081
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: health
          initialDelaySeconds: 30
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: cert
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-certs
      terminationGracePeriodSeconds: 10
      nodeSelector:
        kubernetes.io/os: linux